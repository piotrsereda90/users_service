[{"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\reportWebVitals.js":"1","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\index.js":"2","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\App.js":"3","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\components\\Users.js":"4","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\home\\components\\Home.js":"5","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\containers\\reducer\\reducer_users.js":"6","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\rootReducers.js":"7","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\ui\\Message.js":"8","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\ui\\reducer_messages.js":"9","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\containers\\UserForm.js":"10"},{"size":362,"mtime":1606409038769,"results":"11","hashOfConfig":"12"},{"size":1449,"mtime":1612436675174,"results":"13","hashOfConfig":"12"},{"size":993,"mtime":1612945614874,"results":"14","hashOfConfig":"12"},{"size":756,"mtime":1612775633908,"results":"15","hashOfConfig":"12"},{"size":1117,"mtime":1612886334772,"results":"16","hashOfConfig":"12"},{"size":2350,"mtime":1612875019604,"results":"17","hashOfConfig":"12"},{"size":365,"mtime":1612944234464,"results":"18","hashOfConfig":"12"},{"size":961,"mtime":1612887034141,"results":"19","hashOfConfig":"12"},{"size":733,"mtime":1612885867330,"results":"20","hashOfConfig":"12"},{"size":2037,"mtime":1612946404368,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n2zu5n",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\reportWebVitals.js",[],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\index.js",["44","45"],"import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport storage from \"redux-persist/lib/storage\"; \nimport thunk from 'redux-thunk'\nimport reducers from './rootReducers'\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = [thunk];\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst store = createStore(\n  persistedReducer,\n  /* preloadedState, */ composeEnhancers(applyMiddleware(...middleware))\n);\nconst persistor = persistStore(store);\n\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconsole.log(store.getState())\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\App.js",[],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\components\\Users.js",[],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\home\\components\\Home.js",["46"],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\containers\\reducer\\reducer_users.js",["47","48"],"import axios from 'axios'\r\nimport {addMessage} from '../../../ui/reducer_messages'\r\n\r\nconst FETCH_USERS_REQUESTED = 'FETCH_USERS_REQUESTED';\r\nconst FETCH_USERS_SUCCEEDED = 'FETCH_USERS_SUCCEEDED';\r\nconst FETCH_USERS_FAILED = 'FETCH_USERS_FAILED';\r\nconst RESET_USERS = 'RESET_USERS'\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  users:[],\r\n  isLoading: false,\r\n  isError: false,\r\n}\r\n\r\nconst fetchRequested = () => ({ type: FETCH_USERS_REQUESTED });\r\nconst fetchFailed = () => ({ type: FETCH_USERS_FAILED });\r\nconst fetchSucceeded = (data) => ({\r\n  type: FETCH_USERS_SUCCEEDED,\r\n  payload: data\r\n});\r\nexport const resetUsers = () => ({type:RESET_USERS})\r\n\r\n\r\nexport const removeUsers = ()=> {\r\n  return function(dispatch){\r\n    dispatch(resetUsers());\r\n    dispatch(addMessage({message:'users have been removed', type:'warning'}));\r\n  }\r\n}\r\n\r\n\r\nexport const fetchUsers = (initialValue) => {\r\n  return function(dispatch){\r\n    dispatch(fetchRequested());\r\n    axios\r\n      .get(`https://randomuser.me/api/?results=${initialValue}`)\r\n      .then(response => {\r\n        dispatch(fetchSucceeded(response.data.results));\r\n        if(initialValue === 10){\r\n          dispatch(addMessage({message:'Users have been loaded', type:'info'}));\r\n        }else if(initialValue === 1){\r\n          dispatch(addMessage({message: 'User have been added', type:'danger'}))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        dispatch(fetchFailed())\r\n      });\r\n  };\r\n};\r\n\r\nexport default (state=INITIAL_STATE, action) => {\r\n  switch(action.type){\r\n  case FETCH_USERS_REQUESTED:\r\n    return{\r\n      ...state,\r\n      isLoading: true,\r\n      isError: false,\r\n    }\r\n  case FETCH_USERS_SUCCEEDED:\r\n    if(action.payload.length===10){\r\n      return{\r\n        ...state,\r\n        isLoading: false,\r\n        isError:false,\r\n        users: action.payload\r\n      }\r\n    }else if(action.payload.length===1){\r\n      return{\r\n        ...state,\r\n        isLoading: false,\r\n        isError:false,\r\n        users: state.users.concat(action.payload)\r\n      }\r\n    }\r\n    case FETCH_USERS_FAILED:\r\n      return{\r\n        ...state,\r\n        isLoading: false,\r\n        isError:true,\r\n      }\r\n      case RESET_USERS:\r\n        return{\r\n          ...state,\r\n          isLoading: false,\r\n          isError:false,\r\n          users:[]\r\n        }\r\n      default: return state\r\n}\r\n}","C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\rootReducers.js",[],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\ui\\Message.js",[],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\ui\\reducer_messages.js",["49"],"C:\\WebDev\\szkola_reacta\\redux-zadanie\\redux\\src\\users\\containers\\UserForm.js",[],{"ruleId":"50","severity":1,"message":"51","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":26,"column":7,"nodeType":"52","messageId":"53","endLine":26,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":29,"column":3,"nodeType":"57","messageId":"58","endLine":29,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":53,"column":1,"nodeType":"61","endLine":92,"endColumn":2},{"ruleId":"62","severity":1,"message":"63","line":77,"column":5,"nodeType":"64","messageId":"65","endLine":82,"endColumn":8},{"ruleId":"59","severity":1,"message":"60","line":19,"column":1,"nodeType":"61","endLine":39,"endColumn":2},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fetchUsers'.","ObjectExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case"]